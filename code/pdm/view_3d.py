import json
import sys
from pdm.pdmcore import PDM
import matplotlib
matplotlib.use('TkAgg')
from matplotlib import pyplot
from mpl_toolkits.mplot3d import Axes3D
import torch
import os
from common.util import mkdir_if_not_exists

d = json.load(open(sys.argv[1])) # generated by plot_biggest_improvements.py
target = sys.argv[2]

def plot(untransformed, transformation, target):
    mkdir_if_not_exists(target)
    transformed = PDM.transform(untransformed, transformation)

    for i in range(len(transformed)):
        fig = pyplot.figure()
        ax = Axes3D(fig)
        ax.set_xlabel("X")
        ax.set_ylabel("Y")
        ax.set_zlabel("Z")

        ax.scatter(transformed[i, :, 0], transformed[i, :, 1] * -1, transformed[i, :, 2])
        ax.view_init(elev=70, azim=-90)
        pyplot.savefig(os.path.join(target, "%d.png" % i))
        pyplot.close()

plot(torch.tensor(d["3d_easy"]), torch.tensor(d["affine_params_easy"]), os.path.join(target, "easy"))
plot(torch.tensor(d["3d_hard"]), torch.tensor(d["affine_params_hard"]), os.path.join(target, "hard"))

